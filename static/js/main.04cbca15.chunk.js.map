{"version":3,"sources":["components/Home.js","components/interests/Category.js","components/interests/topics/VideoGames.js","components/interests/topics/Coffee.js","components/interests/topics/Music.js","components/interests/topics/Snowboarding.js","components/interests/Interests.js","components/Projects.js","components/Contact.js","components/Banner.js","App.js","serviceWorker.js","index.js"],"names":["Home","className","Category","props","to","link","title","VideoGames","Coffee","Music","Snowboarding","Interests","path","component","Projects","href","target","rel","Contact","Banner","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"uYAYeA,MATf,WACI,OACI,6BAASC,UAAU,QACf,+DACA,sG,MCOGC,MARf,SAAkBC,GACd,OACI,kBAAC,IAAD,CAAMF,UAAU,WAAWG,GAAKD,EAAME,MAClC,4BAAMF,EAAMG,SCETC,MATf,WACI,OACI,iCACI,iDACA,+CCKGC,MATf,WACI,OACI,iCACI,kDACA,iFCKGC,MATf,WACI,OACI,iCACI,8DACA,kDCIGC,MARf,WACI,OACI,iCACI,+C,MC2CGC,MApCf,WACI,OACI,6BAASV,UAAU,aACf,kBAAC,IAAD,KACI,kBAAC,IAAD,CACIW,KAAK,mCACLC,UAAYN,IAEhB,kBAAC,IAAD,CACIK,KAAK,8BACLC,UAAYL,IAEhB,kBAAC,IAAD,CACII,KAAK,6BACLC,UAAYJ,IAEhB,kBAAC,IAAD,CACIG,KAAK,oCACLC,UAAYH,IAEhB,kBAAC,IAAD,CAAOE,KAAK,wBACR,6BAASX,UAAU,WAAnB,2FAKR,+BACI,kBAAC,EAAD,CAAUK,MAAM,cAAcD,KAAK,qCACnC,kBAAC,EAAD,CAAUC,MAAM,SAASD,KAAK,gCAC9B,kBAAC,EAAD,CAAUC,MAAM,QAAQD,KAAK,+BAC7B,kBAAC,EAAD,CAAUC,MAAM,eAAeD,KAAK,yC,MCtBrCS,MAjBf,WACI,OACI,6BAASb,UAAU,YACf,uEACA,iCACI,uBAAGc,KAAK,yDAAyDC,OAAO,SAASC,IAAI,uBAArF,kBACA,6KAEJ,6BACA,iCACI,uBAAGF,KAAK,mCAAmCC,OAAO,SAASC,IAAI,uBAA/D,mBACA,iM,MCHDC,MARf,WACI,OACI,6BAASjB,UAAU,WACf,2CADJ,0B,MCIOkB,MANf,WACI,OACI,yBAAKlB,UAAU,Y,MCoCRmB,MA3Bf,WACE,OACE,yBAAKnB,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,4BAAQA,UAAU,cAChB,4CACA,yBAAKA,UAAU,WACb,kBAAC,IAAD,CAAMG,GAAG,eAAT,QADF,MAEE,kBAAC,IAAD,CAAMA,GAAG,wBAAT,aAFF,MAGE,kBAAC,IAAD,CAAMA,GAAG,uBAAT,YAHF,MAIE,kBAAC,IAAD,CAAMA,GAAG,sBAAT,aAGJ,6BAASH,UAAU,YACjB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOW,KAAK,uBAAuBC,UAAYF,IAC/C,kBAAC,IAAD,CAAOC,KAAK,sBAAsBC,UAAYC,IAC9C,kBAAC,IAAD,CAAOF,KAAK,qBAAqBC,UAAYK,IAC7C,kBAAC,IAAD,CAAON,KAAK,aAAaC,UAAYb,SCrB7BqB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.04cbca15.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../styles/Home.scss'\r\n\r\nfunction Home() {\r\n    return (\r\n        <section className=\"home\">\r\n            <h1>Welcome to my personal website!</h1>\r\n            <p>I'm using this space for webdev practice and a sort of personal blog.</p>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport {\r\n    Link\r\n} from 'react-router-dom';\r\nimport '../../styles/Category.scss';\r\n\r\nfunction Category(props) {\r\n    return (\r\n        <Link className=\"category\" to={ props.link }>\r\n            <h1>{ props.title }</h1>\r\n        </Link>\r\n    );\r\n}\r\n\r\nexport default Category;","import React from 'react';\r\n\r\nfunction VideoGames() {\r\n    return (\r\n        <article>\r\n            <h2>Currently Playing</h2>\r\n            <p>Nier: Automata</p>\r\n        </article>\r\n    )\r\n}\r\n\r\nexport default VideoGames;","import React from 'react';\r\n\r\nfunction Coffee() {\r\n    return (\r\n        <article>\r\n            <h2>Currently Drinking</h2>\r\n            <p>Ethiopia Sidamo - What's Brewing Coffee Roasters</p>\r\n        </article>\r\n    )\r\n}\r\n\r\nexport default Coffee;","import React from 'react';\r\n\r\nfunction Music() {\r\n    return (\r\n        <article>\r\n            <h2>Favorite Album (at the moment)</h2>\r\n            <p>Lush - Snail Mail</p>\r\n        </article>\r\n    )\r\n}\r\n\r\nexport default Music;","import React from 'react';\r\n\r\nfunction Snowboarding() {\r\n    return (\r\n        <article>\r\n            <p>When's winter?</p>\r\n        </article>\r\n    )\r\n}\r\n\r\nexport default Snowboarding;","import React from 'react';\r\nimport {\r\n    Switch,\r\n    Route\r\n  } from 'react-router-dom';\r\nimport Category from './Category';\r\nimport VideoGames from './topics/VideoGames';\r\nimport Coffee from './topics/Coffee';\r\nimport Music from './topics/Music';\r\nimport Snowboarding from './topics/Snowboarding';\r\nimport '../../styles/Interests.scss';\r\n\r\nfunction Interests() {\r\n    return (\r\n        <section className=\"interests\">\r\n            <Switch>\r\n                <Route\r\n                    path=\"/portfolio/interests/video-games\"\r\n                    component={ VideoGames }\r\n                />\r\n                <Route\r\n                    path=\"/portfolio/interests/coffee\"\r\n                    component={ Coffee }\r\n                />\r\n                <Route\r\n                    path=\"/portfolio/interests/music\"\r\n                    component={ Music }\r\n                />\r\n                <Route\r\n                    path=\"/portfolio/interests/snowboarding\"\r\n                    component={ Snowboarding }\r\n                />\r\n                <Route path=\"/portfolio/interests\">\r\n                    <article className=\"summary\">\r\n                        Here are some things I'm interested in. Check out the links on the right to see more.\r\n                    </article>\r\n                </Route>\r\n            </Switch>\r\n            <aside>\r\n                <Category title=\"Video Games\" link=\"/portfolio/interests/video-games\" />\r\n                <Category title=\"Coffee\" link=\"/portfolio/interests/coffee\" />\r\n                <Category title=\"Music\" link=\"/portfolio/interests/music\" />\r\n                <Category title=\"Snowboarding\" link=\"/portfolio/interests/snowboarding\" />\r\n            </aside>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default Interests;","import React from 'react';\r\nimport '../styles/Projects.scss'\r\n\r\nfunction Projects() {\r\n    return (\r\n        <section className=\"projects\">\r\n            <h1>Shameless plugs for friends and family:</h1>\r\n            <article>\r\n                <a href=\"https://open.spotify.com/artist/6JG7KTQYlmrrMg5an1WjFD\" target=\"_blank\" rel=\"noopener noreferrer\">Saint Sterling</a>\r\n                <p>A few of my friends decided to make a band and it's pretty great. Check out their first EP on Spotify and give them a follow on social media!</p>\r\n            </article>\r\n            <hr></hr>\r\n            <article>\r\n                <a href=\"https://sisyphean-games.itch.io/\" target=\"_blank\" rel=\"noopener noreferrer\">Sisyphean Games</a>\r\n                <p>I had the opportunity to participate in a game jam with a couple of my cousins. Here is their game company page. Check out what they've been working on lately!</p>\r\n            </article>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default Projects;","import React from 'react';\r\nimport '../styles/Contact.scss'\r\n\r\nfunction Contact() {\r\n    return (\r\n        <section className=\"contact\">\r\n            <strong>Email: </strong>bren.ryan94@gmail.com\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default Contact;","import React from 'react';\r\nimport '../styles/Banner.scss';\r\n\r\nfunction Banner() {\r\n    return (\r\n        <div className=\"banner\"></div>\r\n    );\r\n}\r\n\r\nexport default Banner;","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from 'react-router-dom';\nimport Home from './components/Home';\nimport Interests from './components/interests/Interests';\nimport Projects from './components/Projects';\nimport Contact from './components/Contact';\nimport Banner from './components/Banner';\nimport './App.scss';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Banner />\n      <Router>\n        <header className=\"App-header\">\n          <h1>Brendan Ryan</h1>\n          <nav className=\"App-nav\">\n            <Link to=\"/portfolio/\">Home</Link>{ ` | ` }\n            <Link to=\"/portfolio/interests\">Interests</Link>{ ` | ` }\n            <Link to=\"/portfolio/projects\">Projects</Link>{ ` | ` }\n            <Link to=\"/portfolio/contact\">Contact</Link>\n          </nav>\n        </header>\n        <section className=\"App-body\">\n          <Switch>\n            <Route path=\"/portfolio/interests\" component={ Interests } />\n            <Route path=\"/portfolio/projects\" component={ Projects } />\n            <Route path=\"/portfolio/contact\" component={ Contact } />\n            <Route path=\"/portfolio\" component={ Home } />\n          </Switch>\n        </section>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}